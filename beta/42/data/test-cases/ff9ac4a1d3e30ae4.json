{"uid":"ff9ac4a1d3e30ae4","name":"add(int, int, int) 67 + 82 = 150","fullName":"com.example.project.CalculatorTests.add","historyId":"1c543b16c1950caf724294f69c3b0bd","time":{"start":1721051624307,"stop":1721051624312,"duration":5},"description":"","status":"failed","statusMessage":"67 + 82 should equal 150 ==> expected: <150> but was: <149>","statusTrace":"org.opentest4j.AssertionFailedError: 67 + 82 should equal 150 ==> expected: <150> but was: <149>\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:156)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:598)\n\tat com.example.project.CalculatorTests.add(CalculatorTests.kt:53)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat io.qameta.allure.junit5.AllureJunit5.interceptTestTemplateMethod(AllureJunit5.java:59)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.SliceOps$1$1.accept(SliceOps.java:200)\n\tat java.base/java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfRef.tryAdvance(StreamSpliterators.java:1358)\n\tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)\n\tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.example.project.CalculatorTests]/[test-template:add(int, int, int)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az973-282"},{"name":"thread","value":"2033@fv-az973-282.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.example.project.CalculatorTests"},{"name":"testClass","value":"com.example.project.CalculatorTests"},{"name":"testMethod","value":"add"},{"name":"suite","value":"com.example.project.CalculatorTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"67"},{"name":"arg1","value":"82"},{"name":"arg2","value":"150"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":39},"items":[{"uid":"63acb2d5eeb38b2","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/41//#testresult/63acb2d5eeb38b2","status":"failed","statusDetails":"67 + 82 should equal 150 ==> expected: <150> but was: <149>","time":{"start":1721051182656,"stop":1721051182661,"duration":5}},{"uid":"e7bdf74cff249b31","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/40//#testresult/e7bdf74cff249b31","status":"passed","time":{"start":1721050927587,"stop":1721050927590,"duration":3}},{"uid":"68101ba6acf6ffe8","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/39//#testresult/68101ba6acf6ffe8","status":"passed","time":{"start":1721050679419,"stop":1721050679422,"duration":3}},{"uid":"748334801d468611","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/38//#testresult/748334801d468611","status":"passed","time":{"start":1721050222482,"stop":1721050222485,"duration":3}},{"uid":"90ab3f07b48a3ac1","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/37//#testresult/90ab3f07b48a3ac1","status":"passed","time":{"start":1721049851731,"stop":1721049851734,"duration":3}},{"uid":"2c2b777fa905e06e","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/36//#testresult/2c2b777fa905e06e","status":"passed","time":{"start":1721049604023,"stop":1721049604028,"duration":5}},{"uid":"22a1f91109f7527b","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/35//#testresult/22a1f91109f7527b","status":"passed","time":{"start":1721048273340,"stop":1721048273342,"duration":2}},{"uid":"40c3e57d7d56678b","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/34//#testresult/40c3e57d7d56678b","status":"passed","time":{"start":1721048017909,"stop":1721048017911,"duration":2}},{"uid":"c1f040871a20355b","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/33//#testresult/c1f040871a20355b","status":"passed","time":{"start":1721046042767,"stop":1721046042769,"duration":2}},{"uid":"19cf7a85e00e2935","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/32//#testresult/19cf7a85e00e2935","status":"passed","time":{"start":1721045419589,"stop":1721045419591,"duration":2}},{"uid":"c7953d70a89e8afe","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/31//#testresult/c7953d70a89e8afe","status":"passed","time":{"start":1721044902927,"stop":1721044902930,"duration":3}},{"uid":"27255b06eda124e1","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/30//#testresult/27255b06eda124e1","status":"passed","time":{"start":1721044478279,"stop":1721044478282,"duration":3}},{"uid":"b2625ca4023af4cc","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/29//#testresult/b2625ca4023af4cc","status":"passed","time":{"start":1721044221030,"stop":1721044221032,"duration":2}},{"uid":"3425b89ee6bb83f3","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/29//#testresult/3425b89ee6bb83f3","status":"passed","time":{"start":1721043687062,"stop":1721043687065,"duration":3}},{"uid":"22c8079ea10452c1","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/28//#testresult/22c8079ea10452c1","status":"passed","time":{"start":1721043218432,"stop":1721043218434,"duration":2}},{"uid":"d2aa896bbf640355","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/27//#testresult/d2aa896bbf640355","status":"passed","time":{"start":1721042513122,"stop":1721042513124,"duration":2}},{"uid":"77fcc993805419d4","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/26//#testresult/77fcc993805419d4","status":"passed","time":{"start":1721041435346,"stop":1721041435349,"duration":3}},{"uid":"6ed51d15a12d25d9","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/25//#testresult/6ed51d15a12d25d9","status":"passed","time":{"start":1721041158221,"stop":1721041158224,"duration":3}},{"uid":"3874690e2188abcb","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/24//#testresult/3874690e2188abcb","status":"passed","time":{"start":1721036285668,"stop":1721036285671,"duration":3}},{"uid":"a99bf4ddded05b09","reportUrl":"https://Yang-33.github.io/allure-page-test/beta/23//#testresult/a99bf4ddded05b09","status":"passed","time":{"start":1721035973679,"stop":1721035973681,"duration":2}}]},"tags":[]},"source":"ff9ac4a1d3e30ae4.json","parameterValues":["67","82","150"]}