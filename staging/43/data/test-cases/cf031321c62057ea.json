{"uid":"cf031321c62057ea","name":"add(int, int, int) 14 + 48 = 63","fullName":"com.example.project.CalculatorTests.add","historyId":"c0411a177cf010caa7bfc5826de80260","time":{"start":1721051871388,"stop":1721051871477,"duration":89},"description":"","status":"failed","statusMessage":"14 + 48 should equal 63 ==> expected: <63> but was: <62>","statusTrace":"org.opentest4j.AssertionFailedError: 14 + 48 should equal 63 ==> expected: <63> but was: <62>\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:156)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:598)\n\tat com.example.project.CalculatorTests.add(CalculatorTests.kt:53)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat io.qameta.allure.junit5.AllureJunit5.interceptTestTemplateMethod(AllureJunit5.java:59)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.SliceOps$1$1.accept(SliceOps.java:200)\n\tat java.base/java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfRef.tryAdvance(StreamSpliterators.java:1358)\n\tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)\n\tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.example.project.CalculatorTests]/[test-template:add(int, int, int)]/[test-template-invocation:#1]"},{"name":"host","value":"fv-az883-738"},{"name":"thread","value":"2029@fv-az883-738.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.example.project.CalculatorTests"},{"name":"testClass","value":"com.example.project.CalculatorTests"},{"name":"testMethod","value":"add"},{"name":"suite","value":"com.example.project.CalculatorTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"14"},{"name":"arg1","value":"48"},{"name":"arg2","value":"63"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":36,"unknown":0,"total":39},"items":[{"uid":"bcc1de3f2cb5c6f6","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/42//#testresult/bcc1de3f2cb5c6f6","status":"failed","statusDetails":"14 + 48 should equal 63 ==> expected: <63> but was: <62>","time":{"start":1721051625195,"stop":1721051625262,"duration":67}},{"uid":"f6ef948e94d8e13f","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/41//#testresult/f6ef948e94d8e13f","status":"failed","statusDetails":"14 + 48 should equal 63 ==> expected: <63> but was: <62>","time":{"start":1721051177026,"stop":1721051177097,"duration":71}},{"uid":"77a691a515cd0729","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/40//#testresult/77a691a515cd0729","status":"passed","time":{"start":1721050926427,"stop":1721050926471,"duration":44}},{"uid":"26f2a24f52568081","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/39//#testresult/26f2a24f52568081","status":"passed","time":{"start":1721050676820,"stop":1721050676862,"duration":42}},{"uid":"371317f879e791a6","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/38//#testresult/371317f879e791a6","status":"passed","time":{"start":1721050217130,"stop":1721050217177,"duration":47}},{"uid":"c11de4048a2ace7c","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/37//#testresult/c11de4048a2ace7c","status":"passed","time":{"start":1721049853408,"stop":1721049853449,"duration":41}},{"uid":"afd689af1c3eba1f","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/36//#testresult/afd689af1c3eba1f","status":"passed","time":{"start":1721049603241,"stop":1721049603284,"duration":43}},{"uid":"e80d7c39b4a1f6e8","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/35//#testresult/e80d7c39b4a1f6e8","status":"passed","time":{"start":1721048265094,"stop":1721048265144,"duration":50}},{"uid":"128feb78a72bd8c1","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/34//#testresult/128feb78a72bd8c1","status":"passed","time":{"start":1721048015986,"stop":1721048016034,"duration":48}},{"uid":"ea0356f88f66fc1d","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/33//#testresult/ea0356f88f66fc1d","status":"passed","time":{"start":1721046043318,"stop":1721046043360,"duration":42}},{"uid":"97952b2faa876852","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/32//#testresult/97952b2faa876852","status":"passed","time":{"start":1721045421006,"stop":1721045421055,"duration":49}},{"uid":"f56183056b6b2c06","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/31//#testresult/f56183056b6b2c06","status":"passed","time":{"start":1721044904838,"stop":1721044904895,"duration":57}},{"uid":"a8881af2dd39caee","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/30//#testresult/a8881af2dd39caee","status":"passed","time":{"start":1721044478433,"stop":1721044478482,"duration":49}},{"uid":"4b59de0238cac239","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/29//#testresult/4b59de0238cac239","status":"passed","time":{"start":1721043684469,"stop":1721043684523,"duration":54}},{"uid":"ee18fdfed7167f64","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/28//#testresult/ee18fdfed7167f64","status":"passed","time":{"start":1721043219270,"stop":1721043219308,"duration":38}},{"uid":"9523f90904633718","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/27//#testresult/9523f90904633718","status":"passed","time":{"start":1721042517948,"stop":1721042517996,"duration":48}},{"uid":"14193ea2246b6ec3","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/26//#testresult/14193ea2246b6ec3","status":"passed","time":{"start":1721041553901,"stop":1721041553941,"duration":40}},{"uid":"bf9e29f757b3e7a3","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/25//#testresult/bf9e29f757b3e7a3","status":"passed","time":{"start":1721041311751,"stop":1721041311794,"duration":43}},{"uid":"df7ad2bddd4b7a7","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/24//#testresult/df7ad2bddd4b7a7","status":"passed","time":{"start":1721036282805,"stop":1721036282855,"duration":50}},{"uid":"2aec162ee9939669","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/23//#testresult/2aec162ee9939669","status":"passed","time":{"start":1721035977452,"stop":1721035977498,"duration":46}}]},"tags":[]},"source":"cf031321c62057ea.json","parameterValues":["14","48","63"]}