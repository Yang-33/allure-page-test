{"uid":"a76fe5d0d3840341","name":"add(int, int, int) 67 + 82 = 150","fullName":"com.example.project.CalculatorTests.add","historyId":"1c543b16c1950caf724294f69c3b0bd","time":{"start":1721051625273,"stop":1721051625277,"duration":4},"description":"","status":"failed","statusMessage":"67 + 82 should equal 150 ==> expected: <150> but was: <149>","statusTrace":"org.opentest4j.AssertionFailedError: 67 + 82 should equal 150 ==> expected: <150> but was: <149>\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:156)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:598)\n\tat com.example.project.CalculatorTests.add(CalculatorTests.kt:53)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat io.qameta.allure.junit5.AllureJunit5.interceptTestTemplateMethod(AllureJunit5.java:59)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.SliceOps$1$1.accept(SliceOps.java:200)\n\tat java.base/java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfRef.tryAdvance(StreamSpliterators.java:1358)\n\tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)\n\tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.example.project.CalculatorTests]/[test-template:add(int, int, int)]/[test-template-invocation:#2]"},{"name":"host","value":"fv-az842-180"},{"name":"thread","value":"2090@fv-az842-180.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.example.project.CalculatorTests"},{"name":"testClass","value":"com.example.project.CalculatorTests"},{"name":"testMethod","value":"add"},{"name":"suite","value":"com.example.project.CalculatorTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"67"},{"name":"arg1","value":"82"},{"name":"arg2","value":"150"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":36,"unknown":0,"total":38},"items":[{"uid":"3dbc16f632133a18","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/41//#testresult/3dbc16f632133a18","status":"failed","statusDetails":"67 + 82 should equal 150 ==> expected: <150> but was: <149>","time":{"start":1721051177116,"stop":1721051177125,"duration":9}},{"uid":"af8e38700ef5025e","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/40//#testresult/af8e38700ef5025e","status":"passed","time":{"start":1721050926484,"stop":1721050926486,"duration":2}},{"uid":"b481abb5e4872f0","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/39//#testresult/b481abb5e4872f0","status":"passed","time":{"start":1721050676873,"stop":1721050676876,"duration":3}},{"uid":"d9ee11f143b881d2","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/38//#testresult/d9ee11f143b881d2","status":"passed","time":{"start":1721050217186,"stop":1721050217189,"duration":3}},{"uid":"3d518feb922ce46f","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/37//#testresult/3d518feb922ce46f","status":"passed","time":{"start":1721049853459,"stop":1721049853461,"duration":2}},{"uid":"c8a4a6ec49a06004","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/36//#testresult/c8a4a6ec49a06004","status":"passed","time":{"start":1721049603294,"stop":1721049603297,"duration":3}},{"uid":"26740f4f8b9ba537","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/35//#testresult/26740f4f8b9ba537","status":"passed","time":{"start":1721048265154,"stop":1721048265156,"duration":2}},{"uid":"b20e6b13609aae75","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/34//#testresult/b20e6b13609aae75","status":"passed","time":{"start":1721048016045,"stop":1721048016048,"duration":3}},{"uid":"fe8fa1667ee3ac38","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/33//#testresult/fe8fa1667ee3ac38","status":"passed","time":{"start":1721046043369,"stop":1721046043371,"duration":2}},{"uid":"d206e0d494fa0c81","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/32//#testresult/d206e0d494fa0c81","status":"passed","time":{"start":1721045421065,"stop":1721045421067,"duration":2}},{"uid":"de77be0468dd706","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/31//#testresult/de77be0468dd706","status":"passed","time":{"start":1721044904905,"stop":1721044904908,"duration":3}},{"uid":"89a4067f50e5970f","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/30//#testresult/89a4067f50e5970f","status":"passed","time":{"start":1721044478492,"stop":1721044478495,"duration":3}},{"uid":"350d2428d1e7eeea","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/29//#testresult/350d2428d1e7eeea","status":"passed","time":{"start":1721043684534,"stop":1721043684537,"duration":3}},{"uid":"6e1a86ed32df44a9","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/28//#testresult/6e1a86ed32df44a9","status":"passed","time":{"start":1721043219316,"stop":1721043219319,"duration":3}},{"uid":"6f83ec27370634fb","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/27//#testresult/6f83ec27370634fb","status":"passed","time":{"start":1721042518006,"stop":1721042518010,"duration":4}},{"uid":"79fbdca1c938c5f9","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/26//#testresult/79fbdca1c938c5f9","status":"passed","time":{"start":1721041553951,"stop":1721041553954,"duration":3}},{"uid":"96ec0d74d1f2e9d5","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/25//#testresult/96ec0d74d1f2e9d5","status":"passed","time":{"start":1721041311817,"stop":1721041311819,"duration":2}},{"uid":"716ce6703ed8dc7f","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/24//#testresult/716ce6703ed8dc7f","status":"passed","time":{"start":1721036282868,"stop":1721036282872,"duration":4}},{"uid":"513162990c458b68","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/23//#testresult/513162990c458b68","status":"passed","time":{"start":1721035977507,"stop":1721035977509,"duration":2}},{"uid":"e0f283918f4523e8","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/22//#testresult/e0f283918f4523e8","status":"passed","time":{"start":1721035445531,"stop":1721035445535,"duration":4}}]},"tags":[]},"source":"a76fe5d0d3840341.json","parameterValues":["67","82","150"]}