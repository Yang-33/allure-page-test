{"uid":"f9f8b384ef20e506","name":"add(int, int, int) 61 + 27 = 89","fullName":"com.example.project.CalculatorTests.add","historyId":"b8fef6eecc87f3a5611e0678c93bbefa","time":{"start":1721051177129,"stop":1721051177136,"duration":7},"description":"","status":"failed","statusMessage":"61 + 27 should equal 89 ==> expected: <89> but was: <88>","statusTrace":"org.opentest4j.AssertionFailedError: 61 + 27 should equal 89 ==> expected: <89> but was: <88>\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:156)\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:598)\n\tat com.example.project.CalculatorTests.add(CalculatorTests.kt:53)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat io.qameta.allure.junit5.AllureJunit5.interceptTestTemplateMethod(AllureJunit5.java:59)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.SliceOps$1$1.accept(SliceOps.java:200)\n\tat java.base/java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfRef.tryAdvance(StreamSpliterators.java:1358)\n\tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)\n\tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.example.project.CalculatorTests]/[test-template:add(int, int, int)]/[test-template-invocation:#3]"},{"name":"host","value":"fv-az770-430"},{"name":"thread","value":"2046@fv-az770-430.Test worker(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.example.project.CalculatorTests"},{"name":"testClass","value":"com.example.project.CalculatorTests"},{"name":"testMethod","value":"add"},{"name":"suite","value":"com.example.project.CalculatorTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"61"},{"name":"arg1","value":"27"},{"name":"arg2","value":"89"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":36,"unknown":0,"total":37},"items":[{"uid":"cc230f331f33a330","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/40//#testresult/cc230f331f33a330","status":"passed","time":{"start":1721050926491,"stop":1721050926494,"duration":3}},{"uid":"e8f0d1f89e4ea38f","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/39//#testresult/e8f0d1f89e4ea38f","status":"passed","time":{"start":1721050676881,"stop":1721050676884,"duration":3}},{"uid":"9193650046529fbc","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/38//#testresult/9193650046529fbc","status":"passed","time":{"start":1721050217194,"stop":1721050217197,"duration":3}},{"uid":"2ac2e36739a963d7","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/37//#testresult/2ac2e36739a963d7","status":"passed","time":{"start":1721049853466,"stop":1721049853468,"duration":2}},{"uid":"c275819ea229c613","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/36//#testresult/c275819ea229c613","status":"passed","time":{"start":1721049603301,"stop":1721049603304,"duration":3}},{"uid":"d5025901df61f2fa","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/35//#testresult/d5025901df61f2fa","status":"passed","time":{"start":1721048265160,"stop":1721048265162,"duration":2}},{"uid":"dea73f1063c57cce","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/34//#testresult/dea73f1063c57cce","status":"passed","time":{"start":1721048016053,"stop":1721048016055,"duration":2}},{"uid":"503935e8ffc57a2b","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/33//#testresult/503935e8ffc57a2b","status":"passed","time":{"start":1721046043376,"stop":1721046043378,"duration":2}},{"uid":"bce7c3d338b5347d","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/32//#testresult/bce7c3d338b5347d","status":"passed","time":{"start":1721045421071,"stop":1721045421073,"duration":2}},{"uid":"efc55a056347e68a","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/31//#testresult/efc55a056347e68a","status":"passed","time":{"start":1721044904913,"stop":1721044904916,"duration":3}},{"uid":"edd9981c576833ab","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/30//#testresult/edd9981c576833ab","status":"passed","time":{"start":1721044478500,"stop":1721044478502,"duration":2}},{"uid":"8fa34ccc3ca01ead","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/29//#testresult/8fa34ccc3ca01ead","status":"passed","time":{"start":1721043684541,"stop":1721043684543,"duration":2}},{"uid":"2a49cafeb942b56f","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/28//#testresult/2a49cafeb942b56f","status":"passed","time":{"start":1721043219324,"stop":1721043219326,"duration":2}},{"uid":"1ba176da8c456a29","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/27//#testresult/1ba176da8c456a29","status":"passed","time":{"start":1721042518014,"stop":1721042518017,"duration":3}},{"uid":"ef6c0b6117213e08","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/26//#testresult/ef6c0b6117213e08","status":"passed","time":{"start":1721041553958,"stop":1721041553961,"duration":3}},{"uid":"e7a86ae3731d29c9","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/25//#testresult/e7a86ae3731d29c9","status":"passed","time":{"start":1721041311824,"stop":1721041311825,"duration":1}},{"uid":"24fbefaf79f80877","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/24//#testresult/24fbefaf79f80877","status":"passed","time":{"start":1721036282877,"stop":1721036282881,"duration":4}},{"uid":"b777f510f0c63621","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/23//#testresult/b777f510f0c63621","status":"passed","time":{"start":1721035977514,"stop":1721035977516,"duration":2}},{"uid":"dc3b404442094bf7","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/22//#testresult/dc3b404442094bf7","status":"passed","time":{"start":1721035445541,"stop":1721035445544,"duration":3}},{"uid":"7dfd2b12b2b1c81d","reportUrl":"https://Yang-33.github.io/allure-page-test/staging/21//#testresult/7dfd2b12b2b1c81d","status":"passed","time":{"start":1721034946492,"stop":1721034946494,"duration":2}}]},"tags":[]},"source":"f9f8b384ef20e506.json","parameterValues":["61","27","89"]}